service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId && request.resource.data.createdAt == request.time;
    }
    match /rooms/{roomId} {
      allow read;
      // If you create a room, you must set yourself as the owner.
      allow create: if request.resource.data.owner == request.auth.uid;
      // Only the room owner is allowed to modify it.
      allow update: if resource.data.owner == request.auth.uid;
    }
  }
}

// rules_version = '2';

// service cloud.firestore {
//   match /databases/{database}/documents {
//     /* Anyone can read post */
//     // We use "collectionGroup()" to query posts, so you need to be a little bit careful.
//     // https://firebase.google.com/docs/firestore/security/rules-query#collection_group_queries_and_security_rules
//     match /{path=**}/posts/{post} {
//       allow read: if resource.data.published == true;
//     }

//     match /users/{userId} {
//       // https://firebase.google.com/docs/firestore/security/rules-conditions#authentication
//       /* User can be created only if they are authenticated. */
//       allow create: if request.auth.uid != null;

//       // A "read" rule can be divided into "get" and "list" rules
//       // https://firebase.google.com/docs/firestore/security/rules-structure#granular_operations
//       // And this is Hierarchical data rules.
//       // https://firebase.google.com/docs/firestore/security/rules-structure#hierarchical_data
//       // *NOTE!: This rule is no meaning because of subcollection post rule.
//       match /posts/{post} {
//         // Applies to single document read requests
//         /* We dont' request this from Flutter App. Just a example */
//         allow get: if request.auth.uid == userId;

//         // Applies to queries and collection read requests
//         allow list: if request.auth.uid == userId;
//       }


//       // A "write" rule can be divided into "create", "update", and "delete" rules
//       // https://firebase.google.com/docs/firestore/security/rules-structure#granular_operations
//       match /posts/{post} {
//         // To create post, user must login,
//         // Title required
//         // https://firebase.google.com/docs/firestore/security/rules-conditions#data_validation
//         // ""(empty string) is not null. So we need to write like this.
//         // https://firebase.google.com/docs/reference/rules/rules.String?authuser=0#size
//         allow create: if request.auth.uid != null
//                       && request.resource.data.title.size() > 0;

//         // Applies to writes to existing documents
//         // User must be author && title requied to update.
//         allow update: if request.auth.uid == userId
//                       && request.resource.data.title.size() > 0;

//         // Applies to delete operations
//         allow delete: if request.auth.uid == userId;
//       }
//     }
//   }
// }